{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/http-calls.service.ts","./src/app/users/users.component.ts","./src/app/users/users.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'Frontend-Angular';\r\n}\r\n","<app-users></app-users>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    UsersComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    CommonModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    ToastrModule.forRoot({\r\n\t\t\tenableHtml: true,\r\n\t\t\tpreventDuplicates: true\r\n\t\t})\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpCallsService {\r\n  readonly apiUrl: string = 'http://localhost:8080/'\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n\r\n  // get => select operation \r\n  getUsers() {\r\n    return this.http.get(`${this.apiUrl}users`, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).toPromise();\r\n  }\r\n\r\n  // post => insert operation \r\n  addUser(user: any) {\r\n    return this.http.post<any>(`${this.apiUrl}users`, user, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).toPromise();\r\n  }\r\n\r\n  // put => update operation \r\n  updateUser(id: any, user: any) {\r\n    return this.http.put<any>(`${this.apiUrl}users/${id}`, user, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).toPromise();\r\n  }\r\n\r\n  // delete => delete operation \r\n  deleteUser(id: any) {\r\n    return this.http.delete(`${this.apiUrl}users/${id}`, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).toPromise();\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { HttpCallsService } from '../services/http-calls.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\ninterface User {\r\n  id: string,\r\n  firstName: string,\r\n  lastName: string,\r\n  gender: string\r\n}\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.scss']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n\r\n  @ViewChild('userFormRef', { static: true }) userFormRef: any;\r\n\r\n  users: Array<User> = [];\r\n\r\n  // variable for loader\r\n  isLoading = false;\r\n  userForm: FormGroup;\r\n\r\n  addUpdateUserBtn = 'Add';\r\n  idToUpdateUser: any;\r\n\r\n  constructor(\r\n    private httpService: HttpCallsService,\r\n    private formBuilder: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) {\r\n    // form object with some validations\r\n    this.userForm = this.formBuilder.group({\r\n      firstName: ['', [Validators.required]],\r\n      lastName: ['', [Validators.required]],\r\n      gender: ['select', [Validators.required]],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadUsers();\r\n  }\r\n\r\n  loadUsers() {\r\n    this.isLoading = true;\r\n    this.httpService.getUsers().then((res: any) => {\r\n      this.isLoading = false;\r\n      this.users = res;\r\n    }, (err) => {\r\n      this.isLoading = false;\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  action(id: string, user?: User) {\r\n    if (user != undefined) {\r\n      this.addUpdateUserBtn = 'Update';\r\n      this.idToUpdateUser = id;\r\n      this.userForm.patchValue(user);\r\n    } else {\r\n      this.deleteUser(id);\r\n    }\r\n  }\r\n\r\n  addUpdateUserAction(id?: string) {\r\n    if (this.userForm.get('gender')?.value === 'select') {\r\n      this.userForm.get('gender')?.setErrors({\r\n        required: true,\r\n      })\r\n    }\r\n    if (this.userForm.valid) {\r\n      if (!id) {\r\n        this.isLoading = true;\r\n        this.addUser();\r\n      } else {\r\n        this.isLoading = true;\r\n        this.updateUser(id);\r\n      }\r\n    }\r\n  }\r\n\r\n  addUser() {\r\n    this.httpService.addUser(this.userForm.value).then((res: any) => {\r\n      this.isLoading = false;\r\n      this.users = res;\r\n      this.toastr.success('User added successfully', 'Success');\r\n    }).catch(() => {\r\n      this.isLoading = false;\r\n      this.toastr.error('Error in this operation', 'Error');\r\n    }).then(() => {\r\n      this.loadUsers();\r\n    })\r\n  }\r\n\r\n  updateUser(id: string) {\r\n    this.httpService.updateUser(id, this.userForm.value).then((res) => {\r\n      this.isLoading = false;\r\n      this.toastr.success(`<b>User Id - ${id}</b> updated successfully`, 'Success');\r\n      this.addUpdateUserBtn = 'Add';\r\n    }).catch(() => {\r\n      this.isLoading = false;\r\n      this.toastr.error('Error in this operation', 'Error')\r\n    }).then(() => {\r\n      this.loadUsers();\r\n    })\r\n  }\r\n\r\n  deleteUser(id: string) {\r\n    this.isLoading = true;\r\n    this.httpService.deleteUser(id).then((res: any) => {\r\n      this.isLoading = false;\r\n      this.toastr.success(`<b>User Id - ${id}</b> deleted successfully`, 'Success');\r\n    }).catch(() => {\r\n      this.isLoading = false;\r\n      this.toastr.error('Error in this operation', 'Error')\r\n    }).then(() => {\r\n      this.loadUsers();\r\n    });\r\n    this.clearForm();\r\n  }\r\n\r\n  clearForm() {\r\n    this.userFormRef.resetForm();\r\n    this.userForm.reset();\r\n    this.addUpdateUserBtn = 'Add';\r\n    this.userForm.get('gender')?.setValue('select')\r\n  }\r\n}\r\n","<form [formGroup]=\"userForm\"\r\n    (ngSubmit)=\"addUpdateUserBtn === 'Add' ? addUpdateUserAction() : addUpdateUserAction(idToUpdateUser)\" novalidate\r\n    #userFormRef=\"ngForm\" class=\"m-3\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-3\"></div>\r\n        <div class=\"col-md-6\">\r\n            <h4 class=\"modal-title pull-left mt-0\">Add User</h4>\r\n            <div class=\"form-group\">\r\n                <label>First Name</label>\r\n                <input type=\"text\" formControlName=\"firstName\" placeholder=\"First Name\" class=\"form-control\"\r\n                    appTrimValue required\r\n                    [ngClass]=\"{ 'is-invalid': userFormRef.submitted && userForm.get('firstName')?.invalid }\" />\r\n                <div *ngIf=\"userFormRef.submitted && userForm.get('firstName')?.invalid\" class=\"invalid-feedback\">\r\n                    <span *ngIf=\"userForm.get('firstName')?.hasError('required')\">First Name is\r\n                        <strong>required</strong></span>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label>Last Name</label>\r\n                <input type=\"text\" formControlName=\"lastName\" placeholder=\"Last Name\" class=\"form-control\" required\r\n                    appTrimValue\r\n                    [ngClass]=\"{ 'is-invalid': userFormRef.submitted && userForm.get('lastName')?.invalid }\" />\r\n                <div *ngIf=\"userFormRef.submitted && userForm.get('lastName')?.invalid\" class=\"invalid-feedback\">\r\n                    <span *ngIf=\"userForm.get('lastName')?.hasError('required')\">Last Name is\r\n                        <strong>required</strong></span>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label>Gender</label>\r\n                <select class=\"form-control\" formControlName=\"gender\"\r\n                    [ngClass]=\"{ 'is-invalid': userFormRef.submitted && userForm.get('gender')?.errors}\">\r\n                    <option [value]=\"'select'\">--Select Type--</option>\r\n                    <option [value]=\"'Male'\">Male</option>\r\n                    <option [value]=\"'Female'\">Female</option>\r\n                </select>\r\n                <div *ngIf=\"userFormRef.submitted && userForm.get('gender')?.errors\" class=\"invalid-feedback\">\r\n                    <span *ngIf=\"userForm.get('gender')?.errors?.required\">Gender is\r\n                        <strong>required</strong></span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\" col-md-3\">\r\n        </div>\r\n    </div>\r\n    <div class=\"modal-footer popup-footer mt-2\">\r\n        <div class=\"col-md-6\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <button type=\"button\" class=\"btn btn-sm btn-primary f-right mx-2\"\r\n                        (click)=\"clearForm()\">Reset</button>\r\n                    <button type=\"submit\" [disabled]=\"!userForm.valid\"\r\n                        class=\"btn btn-sm btn-primary f-right\">{{addUpdateUserBtn}} User</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n<div class=\"m-2\">\r\n    <div class=\"d-flex justify-content-center\" *ngIf=\"isLoading\">\r\n        <div class=\"spinner-border\" role=\"status\">\r\n            <span class=\"sr-only\"></span>\r\n        </div>\r\n    </div>\r\n    <table class=\"table table-bordered m-1\" *ngIf=\"!isLoading && users.length > 0\">\r\n        <thead>\r\n            <tr>\r\n                <th>S No.</th>\r\n                <th>First Name</th>\r\n                <th>Last Name</th>\r\n                <th>Gender</th>\r\n                <th>Actions</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let user of users\">\r\n                <td>{{user.id}}</td>\r\n                <td>{{user.firstName}}</td>\r\n                <td>{{user.lastName}}</td>\r\n                <td>{{user.gender}}</td>\r\n                <td>\r\n                    <button type=\"button\" class=\"btn btn-sm btn-outline-primary\"\r\n                        (click)=\"action(user.id, user)\">Update</button>\r\n                    <button type=\"button\" class=\"btn btn-sm btn-outline-primary m-left\"\r\n                        (click)=\"action(user.id)\">Delete</button>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { UsersComponent } from './users/users.component';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}